@startuml

DBConnector -- Main
Main -- LoginMenu
LoginMenu -- MainMenu
MainMenu -- UserMenu
MainMenu -- TransactionMenu
UserMenu -- User
TransactionMenu -- Transaction
Repo -- UserRepo
Repo -- TransactionRepo

class DBConnector {
+ Connection connection;
+ createConnection()
}

class LoginMenu{
 static String username
 static int answer

+ login()
+ boolean validateLogin()
+ create new user()
+ myPage()

}

class Main{
Scanner input
ArrayList<Transaction> transactions

+ DBConnector.createConnection()
+ UserMenu.loadData()
+ LoginMenu.LoginMenu(input, transactions)
+ UserMenu.saveData(transactions)
}

class MainMenu {
+ mainMenu(Scanner input, ArrayList<Transaction> transactions)
}

class UserMenu{
static UserRepo userRepo

+ userMenu(Scanner input)
+ showBalance(Scanner input)
+ withdrawMoney(Scanner input)
+ addDeposit(Scanner input)
+ saveData(ArrayList<Transaction> transactions)
+ loadData()
}

class TransactionMenu{
static TransactionRepo transactionRepo

+ TransactionMenu(Scanner input, ArrayList<Transaction> transactions)
+ searchForUser(Scanner input)
+ commitTransactions(Scanner input, ArrayList<Transaction> transactions)
+ showTransactions(Scanner input, ArrayList<Transaction> transactions)
}

class User{
- int userID
- String Name
- String LastName
- int SocialSecurityNumber
- String Gender
- String Username
- String Password
- int PhoneNumber
- int Balance

+ getName()
+ getLastName()
+ getSocialSecurityNumber()
+ getGender()
+ getUsername()
+ getPassword()
+ getPhoneNumber()
+ getBalance(int)
+ toString()
}
class Transaction {
- int transactionID
- int date1
- int amount
- String sender
- String receiver
- ArrayList<Transaction> transactions


+ getDate1()
+ getAmount()
+ getSender()
+ getReceiver()
+ toString()
}

interface Repo {
+ create(T t)
+ update(T t)
}
class UserRepo {
static Connection connection = DBConnection.connection

+ create(User user)
+ update(String username, int balance)
+ User getUserByUsername(String username)
+ User getUserByID(int ID)

}
class TransactionRepo {
+ void create(Transaction transactions)
}

@enduml